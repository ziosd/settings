#!/usr/bin/env node
'use strict';var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _fs=require('fs');var _fs2=_interopRequireDefault(_fs);var _path=require('path');var _path2=_interopRequireDefault(_path);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function template(name){return'const { load } = require(\'@gplatform/settings\')\n\nconst defaults = require(\'./settings.json\')\nconst schema = require(\'./schema.js\')\nconst appName = \''+name+'\'\n\nmodule.exports = load({\n  defaults,\n  schema,\n  commandLineInterface: true,\n  app: process.env[appName],\n  variables: process.env,\n  regex: new RegExp(\'^\' + appName + \'_\')\n})\n'}var actions={init:function init(name){console.log('@gPlatgotm/Settings Init');_fs2.default.mkdirSync('./settings');_fs2.default.writeFileSync('./settings/index.js',template(name||'GPLATFORM_SETTINGS'));_fs2.default.copyFileSync(_path2.default.resolve(__dirname,'../../template/schema.js'),'./settings/schema.js');_fs2.default.copyFileSync(_path2.default.resolve(__dirname,'../../template/settings.json'),'./settings/settings.json');console.log('Success')},build:function build(name){var data=_fs2.default.readFileSync(name||'./settings/settings.json');var value=JSON.stringify(JSON.parse(data));console.log('@gPlatgotm/Settings Build');console.log('\nGPLATFORM_SETTINGS=\''+value+'\'\n');console.log('Success')},env:function env(){var data=_fs2.default.readFileSync(name||'./settings/settings.json');var value=JSON.stringify(JSON.parse(data));console.log('# @gPlatgotm/Settings - Production');console.log('# Last Update: '+new Date().toISOString());console.log('\nGPLATFORM_SETTINGS=\''+value+'\'\n')}};var alias={'i':'init','init':'init','-i':'init','--init':'init','b':'build','build':'build','-b':'build','--build':'build','e':'env','env':'env','-e':'env','--env':'env'};var _process$argv=_slicedToArray(process.argv,4),command=_process$argv[2],name=_process$argv[3];actions[alias[command||'init']](name);